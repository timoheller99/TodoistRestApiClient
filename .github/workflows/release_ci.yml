name: Release CI

on:
  push:
    branches:
      - "main"
      - "beta"
      - "develop"

env:
  CI_TOOLS_VERSION: "3.2.0-beta.2"

jobs:
  create-release:
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    name: Create Release
    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
      - uses: actions/checkout@v1

      - name: Setup .NET Core 3.1.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.300

      - name: Add nuget source
        run: dotnet nuget add source "${{ secrets.NUGET_PUSH_SOURCE }}" -n "github" -u "${{ secrets.PACKAGES_USER }}" -p "${{ secrets.PACKAGES_TOKEN }}" --store-password-in-clear-text

      - name: Restore dependencies
        run: dotnet restore ./TodoistRestApiClient.sln

      - name: Install CI-Tools
        run: sudo npm install -g @process-engine/ci_tools@${{ env.CI_TOOLS_VERSION }}

      - name: Prepare version
        run: ci_tools prepare-version --allow-dirty-workdir --mode dotnet
        working-directory: ./src/TodoistRestApiClient

      - name: Build sources
        run: dotnet build -c Release --no-restore

      - name: Set git config
        run: |
          git config user.name "${{ secrets.CI_USER_NAME }}"
          git config user.email "${{ secrets.CI_USER_EMAIL }}"

      - name: Commit & tag version
        env:
          GH_USER: ${{ secrets.CI_USER_NAME }}
          GH_TOKEN: ${{ secrets.CI_USER_TOKEN }}
        run: |
          git add *.csproj
          ci_tools commit-and-tag-version --only-on-primary-branches --mode dotnet
        working-directory: ./src/TodoistRestApiClient

      - name: Create github release
        env:
          GH_USER: ${{ secrets.CI_USER_NAME }}
          GH_TOKEN: ${{ secrets.CI_USER_TOKEN }}
        run: ci_tools update-github-release --only-on-primary-branches --use-title-and-text-from-git-tag --mode dotnet
        working-directory: ./src/TodoistRestApiClient

      - name: Push NuGet packages
        run: |
          mkdir -p artifacts/nuget
          find ./src -name '*.nupkg' -exec cp {} ./artifacts/nuget \;

          for nugetFile in ./artifacts/nuget/*.nupkg; do
            echo "Pushing $nugetFile ...";
            dotnet nuget push $nugetFile --source "${{ secrets.NUGET_PUSH_SOURCE }}" -k "${{ secrets.NUGET_PASSWORD }}" --skip-duplicate
          done
